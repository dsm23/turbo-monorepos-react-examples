name: Setup node and pnpm
description: |
  Configures Node, pnpm, cache, performs pnpm install

inputs:
  pnpm-run-install:
    description: Whether to run pnpm install
    required: false
    default: "true"
  pnpm-restore-cache:
    description: Whether to restore cache
    required: false
    default: "true"
  pnpm-install-cache-key:
    description: The cache key for the pnpm install cache
    required: false
    default: ${{ runner.os }}-turbo-${{ github.sha }}

runs:
  using: composite
  steps:
    - name: Install pnpm
      uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0
      with:
        run_install: false

    - name: Restore pnpm install cache
      if: ${{ inputs.pnpm-restore-cache == 'true' }}
      uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      with:
        # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
        path: |
          ~/.pnpm-store
          ${{ github.workspace }}/.turbo
        # Generate a new cache whenever packages or source files change.
        key: ${{ inputs.pnpm-install-cache-key }}
        # If source files changed but packages didn't, rebuild from a prior cache.
        restore-keys: |
          ${{ runner.os }}-turbo-

    - name: Setup Node.js
      uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
      with:
        node-version-file: ".nvmrc"
        cache: "pnpm"

    - name: Run pnpm install
      if: ${{ inputs.pnpm-run-install == 'true' }}
      shell: bash
      run: pnpm install --frozen-lockfile
